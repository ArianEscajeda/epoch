library(deseq)
library(deseq2)
library(DEseq)
install.packages("devtools")
devtools::install_github("pcahan1/singleCellNet")
library(singleCellNet)
devtools::install_github(repo = "hhoeflin/hdf5r")
install.packages("hdf5r")
devtools::install_github(repo = "hhoeflin/hdf5r")
devtools::install_github(repo = "hhoeflin/hdf5r")
devtools::install_github(repo = "mojaveazure/loomR", ref = "develop")
library(loomR)
expList<-read.table("~/Desktop/LabThings/Epoch/chip-atlas_data/experimentList.tab", sep="\t", stringsAsFactors=FALSE, fill=TRUE)
colnames(expList)<-c("sample",
"assembly",
"antigen_class",
"antigen" ,
"cell_type_class",
"cell_type",
"cell_type_description",
"processing_logs",
"title"))
colnames(expList)<-c("sample",
"assembly",
"antigen_class",
"antigen" ,
"cell_type_class",
"cell_type",
"cell_type_description",
"processing_logs",
"title")
"mm9" %in% expList$assembly
mmexpList<-expList[expList$assembly=="mm9",]
unique(mmexpList$cell_type)
typelist <- c("Embryonic Stem Cells",
"Pluripotent cell line",
"Embryonic kidney",
"Embryonic head",
"Embryonic limb",
"Embryonic brains",
"Embryonic heart",
"Embryonic erythroblasts",
"Embryonic liver",
"Embryonic trunk",
"Embryonic myoblast",
"Embryonic eye",
"Embryonic stomach",
"Embryonic megakaryocytes",
"Embryonic microglia",
"Embryonic hypothalamus",
"Embryonic gut",
"Embryonic lung",
"Embryonic pancreas",
"Embryonic sertoli cells",
"Embryonic beta cells",
"Embryonic colon",
"Embryos",
"Whole embryo",
"1-cell stage",
"2-cell stage",
"4-cell stage",
"8-cell stage",
"Morula",
"Preimplantation embryo",
"E6.5 embryos",
"E7.0 embryos",
"E7.5 embryos",
"E7.75 embryos",
"E9.5 embryos",
"E10.5 embryos",
"Blastocyst Inner Cell Mass",
"Epiblast",
"Neural tube",
"Neural Crest",
"Neural progenitor cells",
"Mesoderm progenitors",
"mESCs, differentiated",
"mESC derived mesodermal cells",
"mESC derived endoodermal cells",
"mESC derived neural cells",
"mESC derived haematopoietic progenitor",
"mESC derived macrophages",
"mESC derived cardiac cells",
"mESC derived haemogenic endothelium",
"mESC derived epiblast-like cells",
"mESC derived pancreatic cells",
)
c("Embryonic Stem Cells","Embryonic kidney","Embryonic head","Embryonic limb","Embryonic brains","Pluripotent cell line","Embryonic heart","Embryos","Neural progenitor cells","mESC derived endoodermal cells","mESC derived neural cells","Embryonic liver","mESC derived haematopoietic progenitor","mESCs, differentiated","Embryonic erythroblasts","Embryonic trunk","Embryonic myoblast","mESC derived mesodermal cells","mESC derived macrophages","Embryonic eye","Embryonic stomach","1-cell stage","2-cell stage","4-cell stage","8-cell stage","Morula","Embryonic megakaryocytes","Preimplantation embryo","Blastocyst Inner Cell Mass","Epiblast","Neural tube","mESC derived cardiac cells","Embryonic microglia","E9.5 embryos","Embryonic gut","Embryonic lung","Embryonic pancreas","Embryonic sertoli cells",mESC derived haemogenic endothelium","Neural Crest","E6.5 embryos","E7.0 embryos","E7.5 embryos","Embryonic hypothalamus","mESC derived epiblast-like cells","E10.5 embryos","mESC derived pancreatic cells","Embryonic beta cells","Mesoderm progenitors","E7.75 embryos","Embryonic colon","Whole embryo")
c("Embryonic Stem Cells",
"Pluripotent cell line",
"Embryonic kidney",
"Embryonic head",
"Embryonic limb",
"Embryonic brains",
"Embryonic heart",
"Embryonic erythroblasts",
"Embryonic liver",
"Embryonic trunk",
"Embryonic myoblast",
"Embryonic eye",
"Embryonic stomach",
"Embryonic megakaryocytes",
"Embryonic microglia",
"Embryonic hypothalamus",
"Embryonic gut",
"Embryonic lung",
"Embryonic pancreas",
"Embryonic sertoli cells",
"Embryonic beta cells",
"Embryonic colon",
"Embryos",
"Whole embryo",
"1-cell stage",
"2-cell stage",
"4-cell stage",
"8-cell stage",
"Morula",
"Preimplantation embryo",
"E6.5 embryos",
"E7.0 embryos",
"E7.5 embryos",
"E7.75 embryos",
"E9.5 embryos",
"E10.5 embryos",
"Blastocyst Inner Cell Mass",
"Epiblast",
"Neural tube",
"Neural Crest",
"Neural progenitor cells",
"Mesoderm progenitors",
"mESCs, differentiated",
"mESC derived mesodermal cells",
"mESC derived endoodermal cells",
"mESC derived neural cells",
"mESC derived haematopoietic progenitor",
"mESC derived macrophages",
"mESC derived cardiac cells",
"mESC derived haemogenic endothelium",
"mESC derived epiblast-like cells",
"mESC derived pancreatic cells",
)
c("Embryonic Stem Cells",
"Pluripotent cell line",
"Embryonic kidney",
"Embryonic head",
"Embryonic limb",
"Embryonic brains",
"Embryonic heart",
"Embryonic erythroblasts",
"Embryonic liver",
"Embryonic trunk",
"Embryonic myoblast",
"Embryonic eye",
"Embryonic stomach",
"Embryonic megakaryocytes",
"Embryonic microglia",
"Embryonic hypothalamus",
"Embryonic gut",
"Embryonic lung",
"Embryonic pancreas",
"Embryonic sertoli cells",
"Embryonic beta cells",
"Embryonic colon",
"Embryos"
)
c("Whole embryo",
"1-cell stage",
"2-cell stage",
"4-cell stage",
"8-cell stage",
"Morula",
"Preimplantation embryo",
"E6.5 embryos",
"E7.0 embryos",
"E7.5 embryos",
"E7.75 embryos",
"E9.5 embryos",
"E10.5 embryos",
"Blastocyst Inner Cell Mass",
"Epiblast",
"Neural tube",
"Neural Crest",
"Neural progenitor cells",
"Mesoderm progenitors",
"mESCs, differentiated",
"mESC derived mesodermal cells",
"mESC derived endoodermal cells",
"mESC derived neural cells",
"mESC derived haematopoietic progenitor",
"mESC derived macrophages",
"mESC derived cardiac cells",
"mESC derived haemogenic endothelium",
"mESC derived epiblast-like cells",
"mESC derived pancreatic cells",
)
typelist <- c("Embryonic Stem Cells",
"Pluripotent cell line",
"Embryonic kidney",
"Embryonic head",
"Embryonic limb",
"Embryonic brains",
"Embryonic heart",
"Embryonic erythroblasts",
"Embryonic liver",
"Embryonic trunk",
"Embryonic myoblast",
"Embryonic eye",
"Embryonic stomach",
"Embryonic megakaryocytes",
"Embryonic microglia",
"Embryonic hypothalamus",
"Embryonic gut",
"Embryonic lung",
"Embryonic pancreas",
"Embryonic sertoli cells",
"Embryonic beta cells",
"Embryonic colon",
"Embryos",
"Whole embryo",
"1-cell stage",
"2-cell stage",
"4-cell stage",
"8-cell stage",
"Morula",
"Preimplantation embryo",
"E6.5 embryos",
"E7.0 embryos",
"E7.5 embryos",
"E7.75 embryos",
"E9.5 embryos",
"E10.5 embryos",
"Blastocyst Inner Cell Mass",
"Epiblast",
"Neural tube",
"Neural Crest",
"Neural progenitor cells",
"Mesoderm progenitors",
"mESCs, differentiated",
"mESC derived mesodermal cells",
"mESC derived endoodermal cells",
"mESC derived neural cells",
"mESC derived haematopoietic progenitor",
"mESC derived macrophages",
"mESC derived cardiac cells",
"mESC derived haemogenic endothelium",
"mESC derived epiblast-like cells",
"mESC derived pancreatic cells"
)
typelist
mmexpList<-mmexpList[mmexpList$cell_type %in% typelist,]
head(mmexpList)
unique(mmexpList$antigen_class)
mmexpList<-mmexpList[mmexpList$antigen_class<-"TFs and others"
,]
mmexpList<-expList[expList$assembly=="mm9",]
mmexpList<-mmexpList[mmexpList$antigen_class=="TFs and others",]
mmexpList<-mmexpList[mmexpList$cell_type %in% typelist,]
unique(mmexpList$cell_type)
glexpList<-mmexpList[mmexpList$cell_type %in% c("mESC derived mesodermal cells","mESC derived endoodermal cells","mESC derived neural cells"),]
table(glexpList$cell_type)
head(glexpList)
unique(glexpList$antigen)
glexpList[,c("cell_type","antigen")]
endoderm_TFs<-glexpList$antigen[glexpList$cell_type=="mESC derived endodermal cells"]
mesoderm_TFs<-glexpList$antigen[glexpList$cell_type=="mESC derived mesodermal cells"]
neural_TFs<-glexpList$antigen[glexpList$cell_type=="mESC derived neural cells"]
endoderm_TFs
endoderm_TFs<-glexpList$antigen[glexpList$cell_type=="mESC derived endoodermal cells"]
"mESC derived endodermal cells" %in% mmexpList$cell_type
endoderm_TFs
mesoderm_TFs
neural_TFs
intersect(endoderm_TFs,mesoderm_TFs)
intersect(endoderm_TFs,neural_TFs)
intersect(mesoderm_TFs,neural_TFs)
cardiac_expList<-mmexpList[mmexpList$cell_type %in% c("mESC derived cardiac cells"),]
unique(cardiac_expList$antigen)
intersect(unique(cardiac_expList$antigen),endoderm_TFs)
intersect(unique(cardiac_expList$antigen),neural_TFs)
diff_expList<-mmexpList[mmexpList$cell_type %in% c("mESCs, differentiated"),]
head(diff_expList)
diff_expList[,21]
diff_expList[,20]
diff_expList
rm(diff_expList)
meso_prog<-mmexpList[mmexpList$cell_type %in% c("Mesoderm progenitors"),]
meso_prog<-mmexpList[mmexpList$cell_type %in% c("Mesoderm progenitors"),]
rm(meso_prog)
embryonic<-mmexpList[mmexpList$cell_type %in% c("Embryonic heart","Embryonic gut"),]
embryonic
embryonic$antigen[embryonic$cell_type=="Embryonic heart"]
intersect(embryonic$antigen[embryonic$cell_type=="Embryonic heart"],embryonic$antigen[embryonic$cell_type=="Embryonic gut"])
embryonic$antigen[embryonic$cell_type=="Embryonic gut"]
head(mmexpList)
temp<-mmexpList[,c("cell_type","antigen")]
head(temp)
dim(temp)
temp<-mmexpList[,c("cell_type","antigen")]
tflist<-c()
for (tf in unique(temp$antigen)){
sub<-temp[temp$antigen==tf,]
if (length(unique(sub$cell_type))>1){
tflist<-c(tflist,tf)
}
}
tflist
temp<-mmexpList[,c("cell_type","antigen")]
tflist<-data.frame(TF=character(),celltypes=character())
for (tf in unique(temp$antigen)){
sub<-temp[temp$antigen==tf,]
if (length(unique(sub$cell_type))>1){
tflist<-rbind(tflist,data.frame(TF=tf,celltypes=paste(unique(sub$cell_type),sep=";")))
}
}
tflist
mmexpList<-expList[expList$assembly=="mm10",]
mmexpList<-mmexpList[mmexpList$antigen_class=="TFs and others",]
unique(mmexpList$cell_type)
mmexpList$antigen[mmexpList$cell_type=="mESC derived mesodermal cells"]
mmexpList$antigen[mmexpList$cell_type=="mESC derived endoodermal cells"]
hsexpList<-expList[expList$assembly=="hg19",]
hsexpList<-hsexpList[hsexpList$antigen_class=="TFs and others",]
unique(hsexpList$cell_type)
typelist<-c("Embryonic Stem Cells","hESC derived mesendodermal cells","hESC derived neural cells","hESC derived neural crests","hESC derived endodermal cells","hESC derived pancreatic cells","hESC derived cardiac cells","hESC derived retinal cells","hESC derived epidermal cells","hESC derived mesodermal cells","hESC derived ectodermal cells")
hsexpList<-hsexpList[hsexpList$cell_type %in% typelist,]
endoderm_TFs<-hsexpList$antigen[hsexpList$cell_type=="hESC derived endodermal cells"]
mesoderm_TFs<-hsexpList$antigen[hsexpList$cell_type=="hESC derived mesodermal cells"]
neural_TFs<-hsexpList$antigen[hsexpList$cell_type %in% c("hESC derived ectodermal cells","hESC derived neural cells","hESC derived neural crests")]
endoderm_TFs
mesoderm_TFs
neural_TFs
tflist
mmexpList[mmexpList$antigen=="Foxa2",]
mmexpList<-expList[expList$assembly=="mm9",]
mmexpList<-mmexpList[mmexpList$antigen_class=="TFs and others",]
glexpList<-mmexpList[mmexpList$cell_type %in% c("mESC derived mesodermal cells","mESC derived endoodermal cells","mESC derived neural cells"),]
endoderm_TFs<-glexpList$antigen[glexpList$cell_type=="mESC derived endoodermal cells"]
mesoderm_TFs<-glexpList$antigen[glexpList$cell_type=="mESC derived mesodermal cells"]
neural_TFs<-glexpList$antigen[glexpList$cell_type=="mESC derived neural cells"]
head(glexpList)
colnames(glexpList)
g1expList[1]
glexpList[1]
glexpList[18]
glexpList[19]
remotes::install_github("dynverse/dyngen", dependencies = TRUE)
diffnet_filter_acc<-function(diffnet,gs_df,gs_full){
df<-lapply(diffnet,function(x) x[x$TG %in% unique(gs_full$TG),])
df<-lapply(df,function(x) x[x$TF %in% unique(gs_full$TF),])
tfonly<-lapply(df,function(x) x[x$TG %in% unique(gs_full$TF),])
nrows<-sapply(df,function(x) nrow(x))
nsupported<-sapply(df,function(x) sum(paste(x$TF,x$TG) %in% paste(gs_df$TF,gs_df$TG)))
ntfrows<-sapply(tfonly,function(x) nrow(x))
ntfsupported<-sapply(tfonly,function(x) sum(paste(x$TF,x$TG) %in% paste(gs_df$TF,gs_df$TG)))
res<-data.frame(epoch=names(nrows),filtered_interactions=nrows,n_supported=nsupported,filtered_TFinteractions=ntfrows,n_TFsupported=ntfsupported)
res$accuracy<-res$n_supported/res$filtered_interactions
res$TFonly_accuracy<-res$n_TFsupported/res$filtered_TFinteractions
res
}
load("~/Desktop/LabThings/Epoch/network_comparison/pseudo_chip_network/fimo_network_full_qval_filtered_011221.rda")
load("~/Desktop/LabThings/Epoch/network_comparison/pseudo_chip_network/fimo_network_endo_qval_filtered_011221.rda")
load("~/Desktop/LabThings/Epoch/network_comparison/pseudo_chip_network/fimo_network_meso_qval_filtered_011221.rda")
load("~/Desktop/LabThings/Epoch/network_comparison/pseudo_chip_network/fimo_network_ne_qval_filtered_011221.rda")
# endo vs meso
load("~/Desktop/LabThings/Epoch/20200121rescue_20101205_multiseq_reprocess20201020/analysis_112320/by_path_endo_meso/p1_on_112320.rda")
load("~/Desktop/LabThings/Epoch/20200121rescue_20101205_multiseq_reprocess20201020/analysis_112320/by_path_endo_meso/p2_on_112320.rda")
meso_acc<-diffnet_filter_acc(p1_on,fimo_meso,fimo_filtered)
meso_acc
load("~/Desktop/LabThings/Epoch/network_comparison/pseudo_chip_network/fimo_network_full_pval_filtered_011221.rda")
load("~/Desktop/LabThings/Epoch/network_comparison/pseudo_chip_network/fimo_network_endo_pval_filtered_011221.rda")
load("~/Desktop/LabThings/Epoch/network_comparison/pseudo_chip_network/fimo_network_meso_pval_filtered_011221.rda")
load("~/Desktop/LabThings/Epoch/network_comparison/pseudo_chip_network/fimo_network_ne_pval_filtered_011221.rda")
# endo vs meso
load("~/Desktop/LabThings/Epoch/20200121rescue_20101205_multiseq_reprocess20201020/analysis_112320/by_path_endo_meso/p1_on_112320.rda")
load("~/Desktop/LabThings/Epoch/20200121rescue_20101205_multiseq_reprocess20201020/analysis_112320/by_path_endo_meso/p2_on_112320.rda")
meso_acc<-diffnet_filter_acc(p1_on,fimo_meso,fimo_filtered)
meso_acc
library(fgsea)
data("examplePathways")
data("exampleRanks")
examplePathways
head(exampleRanks)
exampleRanks
remotes::install_github("coolbutuseless/ggpattern")
library(ggpattern)
g1<-ggplot(toplot,aes(x=treatment,y=value))+geom_col_pattern(aes(pattern=variable,fill=variable,pattern_fill=variable))+
geom_text(aes(y=value,label=scales::percent(value)),position=position_stack(vjust = 0.5),size=3)+
geom_text(aes(label=paste0("(",count,")"),vjust=+2.5),position=position_stack(vjust = 0.5),size=3)+
coord_flip()+theme_classic()+
theme(axis.title.x = element_blank(),axis.title.y=element_blank(),legend.title=element_blank(),legend.key.width=unit(.5,'cm'),legend.position="bottom",axis.text.y = element_text(size=10))
library(gggplot2)
library(ggplot2)
g1<-ggplot(toplot,aes(x=treatment,y=value))+geom_col_pattern(aes(pattern=variable,fill=variable,pattern_fill=variable))+
geom_text(aes(y=value,label=scales::percent(value)),position=position_stack(vjust = 0.5),size=3)+
geom_text(aes(label=paste0("(",count,")"),vjust=+2.5),position=position_stack(vjust = 0.5),size=3)+
coord_flip()+theme_classic()+
theme(axis.title.x = element_blank(),axis.title.y=element_blank(),legend.title=element_blank(),legend.key.width=unit(.5,'cm'),legend.position="bottom",axis.text.y = element_text(size=10))
library(networkD3)
URL <- "https://cdn.rawgit.com/christophergandrud/networkD3/master/JSONdata/energy.json"
Energy <- jsonlite::fromJSON(URL)
head(Energy$links)
head(energy$nodes)
head(Energy$nodes)
class(Energy$links$source)
data (sales)
freq$number<-1:14
p <- sankeyNetwork(Links = Energy$links, Nodes = Energy$nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
units = "TWh", fontSize = 12, nodeWidth = 30)
p
class(Energy$links$value)
energy$links$energy_type <- sub(' .*', '',
energy$nodes[energy$links$source + 1, 'name'])
Energy$links$energy_type <- sub(' .*', '',
energy$nodes[energy$links$source + 1, 'name'])
Energy$links$energy_type <- sub(' .*', '',
Energy$nodes[Energy$links$source + 1, 'name'])
head(Energy$links)
ankeyNetwork(Links = Energy$links, Nodes = Energy$nodes, Source = 'source',
Target = 'target', Value = 'value', NodeID = 'name',
LinkGroup = 'energy_type', NodeGroup = NULL)
sankeyNetwork(Links = Energy$links, Nodes = Energy$nodes, Source = 'source',
Target = 'target', Value = 'value', NodeID = 'name',
LinkGroup = 'energy_type', NodeGroup = NULL)
library(reshape2)
library(ggplot2)
library(igraph)
#library(qgraph)
library(loomR)
library(gam)
library(minet)
library(singleCellNet)
library(pheatmap)
library(RColorBrewer)
library(GENIE3)
library(loomR)
library(DescTools)
library(ggnetwork)
library(gridExtra)
setwd("~/Desktop/LabThings/Epoch/Epoch/master/warpnet")
devtools::load_all()
load("~/Desktop/LabThings/Epoch/mmTFs_123019.rda")
mmTFs <- setdiff(mmTFs, c("App", "Pcna"))
source("~/Desktop/LabThings/Epoch/Epoch/more_network_functions.R")
ms <- loadDataFromLoom("~/Desktop/LabThings/Epoch/20200121rescue_20101205_multiseq_reprocess20201020/20191205multiseq_scvelo_20201020.loom")
exp_ms<-ms[['expDat']]
sampTab_ms<-ms[['sampTab']]
load("~/Desktop/LabThings/Epoch/20200121rescue_20101205_multiseq_reprocess20201020/analysis_112320/reconstruction_by_path_0zThresh/p1dyn.rda")
p1_exp<-exp_ms[,rownames(p1dyn$cells)]
effectors<-load_SP_effectors("~/Desktop/LabThings/Epoch/signaling_PCcurated/mouse")
effectors<-score_targets(effectors)
effectortargets<-find_targets(effectors,by_rank=TRUE,n_targets=2000)
# remove effector targets <10 genes in ms data
effectortargets$HH_Gli1<-NULL
p1dyn$cells$treatment<-sampTab_ms$treatment[match(as.character(p1dyn$cells$cell_name),as.character(sampTab_ms$obs_names))]
wag_st<-p1dyn$cells[p1dyn$cells$treatment=="WAG",]
wab_st<-p1dyn$cells[p1dyn$cells$treatment=="WAB",]
wan_st<-p1dyn$cells[p1dyn$cells$treatment=="WAN",]
wa_st<-p1dyn$cells[p1dyn$cells$treatment=="WA",]
wag_exp<-exp_ms[,rownames(wag_st)]
wab_exp<-exp_ms[,rownames(wab_st)]
wan_exp<-exp_ms[,rownames(wan_st)]
wa_exp<-exp_ms[,rownames(wa_st)]
wag_exp<-mean_module_expression(wag_exp,effectortargets)
wab_exp<-mean_module_expression(wab_exp,effectortargets)
wan_exp<-mean_module_expression(wan_exp,effectortargets)
wa_exp<-mean_module_expression(wa_exp,effectortargets)
treatment<-c("#1B9E77","#D95F02","#7570B3","#E7298A")
names(treatment)<-c("WAG","WAB","WAN","WA")
anno_colors<-list(treatment=treatment)
heatmap_by_treatment_group(list(WAG=wag_exp,WAB=wab_exp,WAN=wan_exp,WA=wa_exp),sampTab_ms,pseudotime_column="latent_time",limits=c(0,3),thresh_on=.01,anno_colors=anno_colors,fontSize=6)
