xnet_mi<-NA
gnet<-NA
gnet_dyn<-NA
enet<-matrix(0,nrow=3,ncol=3)
enet
res<-list(enet=enet, enet_mi=enet_mi, xnet=xnet, xnet_mi=xnet_mi, gnet=gnet, gnet_dyn=gnet_dyn)
res
res[!is.na(res)]
enet<-NA
enet_mi<-NA
xnet<-NA
xnet_mi<-NA
gnet<-NA
gnet_dyn<-NA
enet<-matrix(0,nrow=3,ncol=3)
xnet<-matrix(0,nrow=3,ncol=3)
res<-list(enet=enet, enet_mi=enet_mi, xnet=xnet, xnet_mi=xnet_mi, gnet=gnet, gnet_dyn=gnet_dyn)
res[!is.na(res)]
library(igraph)
library(qgraph)
library(loomR)
library(gam)
library(singleCellNet)
library(warpnet)
library(minet)
list12<-loadLoomExpUMAP{"~/Downloads/adcluster3_forWarpnet_011820.loom",xname='leiden'}
list12<-loadLoomExpUMAP("~/Downloads/adcluster3_forWarpnet_011820.loom",xname='leiden')
list12<-connect(file="~/Downloads/adcluster3_forWarpnet_011820.loom",mode='r+',skip.validate=TRUE)
x1<-matrix(c(1,2,3,4,5,6,7,8),nrow=2,ncol=4)
x1
colnames(x1)<-c("a","b","c","d")
rownames(x1)<-c("a","c")
x1
x2<-matrix(0,nrow=4,ncol=5)
colnames(x2)<-c("a","b","c","d","e")
rownames(x2)<-c("a","b","c","d","e")
rownames(x2)<-c("a","b","c","d")
x2
pmax(x1,x2)
x2[rownames(x1),colnames(x1)]<-x1
x2
x2<-matrix(0,nrow=4,ncol=5)
colnames(x1)<-c("a","b","d","c")
x2[rownames(x1),colnames(x1)]<-x1
colnames(x2)<-c("a","b","c","d","e")
rownames(x2)<-c("a","b","c","d","e")
rownames(x2)<-c("a","b","c","d")
x1
x2
x2[rownames(x1),colnames(x1)]<-x1
x2
x3<-matrix(3,nrow=4,nrow=5)
x3<-matrix(0,nrow=4,ncol=5)
x3<-x3+3
x3
colnames(x2)<-c("a","b","c","d","e")
colnames(x3)<-c("a","b","c","d","e")
rownames(x3)<-c("a","b","c","d")
x2
x3
pmax(x2,x3)
union(rownames(x1),rownames(x3))
dnorm(c(1,2,3),)
dnorm(c(1,2,3))
dnorm(c(1,2,3),mean=1)
dnorm(c(1,2,3,10),mean=1)
dnorm(c(1,2,3,10))
dnorm(c(1,2,3,4))
dnorm(c(-1,-2,2,3,4))
dnorm(1,mean-1)
dnorm(1,mean=1)
dnorm(2,mean=1)
load("~/Desktop/LabThings/CyTOF/PBMC1/CyTOF_data/cytof_expX_052319.rda")
load("~/Desktop/LabThings/CyTOF/PBMC1/CyTOF_data/cytof_sampTab_052319.rda")
dim(cytof_expX)
head(cytof_st)
exp<-cytof_expX[,rownames(cytof_st[cytof_st$cell_type %in% c("NK cells","B cells")])]
exp<-cytof_expX[,rownames(cytof_st[cytof_st$cell_type %in% c("NK cells","B cells")]),]
exp<-cytof_expX[,rownames(cytof_st[cytof_st$cell_type %in% c("NK cells","B cells"),])]
dim(exp)
exp<-cytof_expX[,rownames(cytof_st[cytof_st$cell_type %in% c("B cells"),])]
exp<-exp[,sample(colnames(exp),20)]
head(exp)
control<-cytof_expX[,sample(colnames(cytof_expX,10))]
control
control<-cytof_expX[,sample(colnames(cytof_expX),10)]
control
expDat<-cbind(exp,control)
dim(expDat)
m<-setNames(c("pos","neg"),c("Yb171_CD20","Er170_CD3"))
m
simulate_flow<-function(expDat, markers, query_cells, control_cells=NA, neg_percentile=0.98, threshold=1){
expDat<-expDat[names(markers),]
if (!is.na(control_cells)){
control_exp<-expDat[,control_cells]
thresh<-setNames(rep(0,length(markers)),names(markers))
for (marker in names(markers)){
if (markers[marker]=="pos"){
thresh[marker]<-quantile(expDat[marker,],neg_percentile)
}else{
thresh[marker]<-quantile(expDat[marker,],(1-neg_percentile))
}
}
}else{
thresh<-setNames(rep(threshold,length(markers)),names(markers))
}
call_pos<-c()
call_neg<-c()
for (cell in cells){
count = 0
for (marker in names(markers)){
if (markers[marker]=="pos" & expDat[marker,cell]>thresh[marker]){
count = count + 1
}else if (markers[marker]=="neg" & expDat[marker,cell]<thresh[marker]){
count = count + 1
}else{
break
}
}
if (count < length(markers)){
call_neg <- c(call_net, cell)
}else{
call_pos <- c(call_pos, cell)
}
}
res<-list(call_pos=call_pos, call_neg=call_neg)
}
sampTab[colnames(control),]
cytof_st[colnames(control),]
control<-cytof_expX[,sample(colnames(cytof_expX),20)]
cytof_st[colnames(control),]
control_cells<-cytof_st[colnames(control),]
control_cells<-control_cells[control_cells$cell_type!="B cells",]
control<-control[,rownames(control_cells)]
expDat<-cbind(exp,control)
res<-simulate_flow(expDat,m,colnames(exp),control_cells=colnames(control))
simulate_flow<-function(expDat, markers, query_cells, control_cells=NA, neg_percentile=0.98, threshold=1){
expDat<-expDat[names(markers),]
if (!is.na(control_cells)){
control_exp<-expDat[,control_cells]
thresh<-setNames(rep(0,length(markers)),names(markers))
for (marker in names(markers)){
if (markers[marker]=="pos"){
thresh[marker]<-quantile(expDat[marker,],neg_percentile)
}else{
thresh[marker]<-quantile(expDat[marker,],(1-neg_percentile))
}
}
}else{
thresh<-setNames(rep(threshold,length(markers)),names(markers))
}
call_pos<-c()
call_neg<-c()
for (cell in query_cells){
count = 0
for (marker in names(markers)){
if (markers[marker]=="pos" & expDat[marker,cell]>thresh[marker]){
count = count + 1
}else if (markers[marker]=="neg" & expDat[marker,cell]<thresh[marker]){
count = count + 1
}else{
break
}
}
if (count < length(markers)){
call_neg <- c(call_net, cell)
}else{
call_pos <- c(call_pos, cell)
}
}
res<-list(call_pos=call_pos, call_neg=call_neg)
}
res<-simulate_flow(expDat,m,colnames(exp),control_cells=colnames(control))
simulate_flow<-function(expDat, markers, query_cells, control_cells=NA, neg_percentile=0.98, threshold=1){
expDat<-expDat[names(markers),]
if (!is.na(control_cells)){
control_exp<-expDat[,control_cells]
thresh<-setNames(rep(0,length(markers)),names(markers))
for (marker in names(markers)){
if (markers[marker]=="pos"){
thresh[marker]<-quantile(expDat[marker,],neg_percentile)
}else{
thresh[marker]<-quantile(expDat[marker,],(1-neg_percentile))
}
}
}else{
thresh<-setNames(rep(threshold,length(markers)),names(markers))
}
call_pos<-c()
call_neg<-c()
for (cell in query_cells){
count = 0
for (marker in names(markers)){
if (markers[marker]=="pos" & expDat[marker,cell]>thresh[marker]){
count = count + 1
}else if (markers[marker]=="neg" & expDat[marker,cell]<thresh[marker]){
count = count + 1
}else{
break
}
}
if (count < length(markers)){
call_neg <- c(call_neg, cell)
}else{
call_pos <- c(call_pos, cell)
}
}
res<-list(call_pos=call_pos, call_neg=call_neg)
}
res<-simulate_flow(expDat,m,colnames(exp),control_cells=colnames(control))
res
simulate_flow<-function(expDat, markers, query_cells, control_cells=NA, neg_percentile=0.98, threshold=1){
expDat<-expDat[names(markers),]
if (!is.na(control_cells)){
control_exp<-expDat[,control_cells]
thresh<-setNames(rep(0,length(markers)),names(markers))
for (marker in names(markers)){
if (markers[marker]=="pos"){
thresh[marker]<-quantile(expDat[marker,],neg_percentile)
}else{
thresh[marker]<-quantile(expDat[marker,],(1-neg_percentile))
}
}
}else{
thresh<-setNames(rep(threshold,length(markers)),names(markers))
}
call_pos<-c()
call_neg<-c()
for (cell in query_cells){
count = 0
for (marker in names(markers)){
print(marker)
print(thresh[marker])
print(expDat[marker,cell])
if (markers[marker]=="pos" & expDat[marker,cell]>thresh[marker]){
count = count + 1
}else if (markers[marker]=="neg" & expDat[marker,cell]<thresh[marker]){
count = count + 1
}else{
break
}
}
if (count < length(markers)){
call_neg <- c(call_neg, cell)
}else{
call_pos <- c(call_pos, cell)
}
}
res<-list(call_pos=call_pos, call_neg=call_neg)
}
res<-simulate_flow(expDat,m,colnames(exp),control_cells=colnames(control))
m
simulate_flow<-function(expDat, markers, query_cells, control_cells=NA, neg_percentile=0.98, threshold=1){
expDat<-expDat[names(markers),]
if (!is.na(control_cells)){
control_exp<-expDat[,control_cells]
thresh<-setNames(rep(0,length(markers)),names(markers))
for (marker in names(markers)){
if (markers[marker]=="pos"){
thresh[marker]<-quantile(expDat[marker,],neg_percentile)
}else{
thresh[marker]<-quantile(expDat[marker,],(1-neg_percentile))
}
}
}else{
thresh<-setNames(rep(threshold,length(markers)),names(markers))
}
call_pos<-c()
call_neg<-c()
for (cell in query_cells){
count = 0
for (marker in names(markers)){
print(marker)
print(markers[marker])
print(expDat[marker,cell])
print(thresh[marker])
if (markers[marker]=="pos" & expDat[marker,cell]>thresh[marker]){
count = count + 1
}else if (markers[marker]=="neg" & expDat[marker,cell]<thresh[marker]){
count = count + 1
}else{
break
}
}
if (count < length(markers)){
call_neg <- c(call_neg, cell)
}else{
call_pos <- c(call_pos, cell)
}
}
res<-list(call_pos=call_pos, call_neg=call_neg)
}
res<-simulate_flow(expDat,m,colnames(exp),control_cells=colnames(control))
simulate_flow<-function(expDat, markers, query_cells, control_cells=NA, neg_percentile=0.98, threshold=1){
expDat<-expDat[names(markers),]
if (!is.na(control_cells)){
control_exp<-expDat[,control_cells]
thresh<-setNames(rep(0,length(markers)),names(markers))
for (marker in names(markers)){
if (markers[marker]=="pos"){
thresh[marker]<-quantile(control_exp[marker,],neg_percentile)
}else{
thresh[marker]<-quantile(control_exp[marker,],(1-neg_percentile))
}
}
}else{
thresh<-setNames(rep(threshold,length(markers)),names(markers))
}
call_pos<-c()
call_neg<-c()
for (cell in query_cells){
count = 0
for (marker in names(markers)){
print(marker)
print(markers[marker])
print(expDat[marker,cell])
print(thresh[marker])
if (markers[marker]=="pos" & expDat[marker,cell]>thresh[marker]){
count = count + 1
}else if (markers[marker]=="neg" & expDat[marker,cell]<thresh[marker]){
count = count + 1
}else{
break
}
}
if (count < length(markers)){
call_neg <- c(call_neg, cell)
}else{
call_pos <- c(call_pos, cell)
}
}
res<-list(call_pos=call_pos, call_neg=call_neg)
}
res<-simulate_flow(expDat,m,colnames(exp),control_cells=colnames(control))
res
exp<-cytof_expX[,rownames(cytof_st[cytof_st$cell_type %in% c("B cells","NK cells"),])]
exp<-exp[,sample(colnames(exp),40)]
expDat<-cbind(exp,control)
cytof_st[colnames(expDat),]
cytof_st[colnames(exp),]
res<-simulate_flow(expDat,m,colnames(exp),control_cells=colnames(control))
res
table(cytof_st[colnames(exp),]$cell_type)
load("~/Desktop/LabThings/CyTOF/PBMC1/CyTOF_data/cytof_expX_052319.rda")
load("~/Desktop/LabThings/CyTOF/PBMC1/CyTOF_data/cytof_sampTab_052319.rda")
st<-cytof_st[colnames(exp),]
st[st$cell_type=="B cells"]
st[st$cell_type=="B cells",]
rownames(st[st$cell_type=="B cells",]) %in% res$call_pos
library(reshape2)
library(ggplot2)
library(igraph)
library(qgraph)
library(loomR)
library(gam)
library(minet)
library(singleCellNet)
library(pheatmap)
library(RColorBrewer)
library(SCopeLoomR)
library(GENIE3)
library(loomR)
library(DescTools)
setwd("~/Desktop/LabThings/Epoch/Epoch/warpnet")
devtools::load_all()
load("~/Desktop/LabThings/Epoch/synthetic_data/trajectory01/011420_trajectory01_tfs.rda")
load("~/Desktop/LabThings/Epoch/synthetic_data/trajectory01/011420_trajectory01_goldstandard_GRN.rda")
load("~/Desktop/LabThings/Epoch/synthetic_data/trajectory01/trajectory01_20cells_expX_021020.rda")
load("~/Desktop/LabThings/Epoch/synthetic_data/trajectory01/trajectory01_20cells_sampTab_021020.rda")
expX<-expX[rowSums(expX)!=0,]
expX<-trans_prop(expX,1e4)
colnames(sampTab)[colnames(sampTab)=="cell_id"]<-"cell_name"
library(reshape2)
library(ggplot2)
library(igraph)
library(qgraph)
library(loomR)
library(gam)
library(minet)
library(singleCellNet)
library(pheatmap)
library(RColorBrewer)
library(SCopeLoomR)
library(GENIE3)
library(loomR)
library(DescTools)
setwd("~/Desktop/LabThings/Epoch/Epoch/warpnet")
devtools::load_all()
xdyn<-findDynGenes(expX,sampTab,c("sA","sB","sC","sEndC"))
ccells = xdyn$cells
expSmoothed<-grnKsmooth(expDat,ccells)
expSmoothed<-grnKsmooth(expX,ccells)
geneDF<-computePT(expSmoothed,expX,sampTab,xdyn,pThresh=0.01)
head(geneDF)
grnDF <- reconstructGRN(expDat[rownames(geneDF),], tfs, zThresh=0)
grnDF <- reconstructGRN(expX[rownames(geneDF),], tfs, zThresh=0)
grnDF <- weightPT(grnDF,geneDF,sampTab)
rm(list=ls())
library(reshape2)
library(ggplot2)
library(igraph)
library(qgraph)
library(loomR)
library(gam)
library(minet)
library(singleCellNet)
library(pheatmap)
library(RColorBrewer)
library(SCopeLoomR)
library(GENIE3)
library(loomR)
library(DescTools)
setwd("~/Desktop/LabThings/Epoch/Epoch/warpnet")
devtools::load_all()
aupr_res<-function(res,gs){
source('~/Desktop/LabThings/scGRN/CODE/calcPRs.R')
gs<-split(gs$TG,gs$TF)
enet<-res$enet
enet_mi<-res$enet_mi
enet_mi_pt<-res$enet_mi_pt
enet_pt<-res$enet_pt
xnet<-res$xnet
xnet_mi<-res$xnet_mi
xnet_mi_pt<-res$xnet_mi_pt
xnet_pt<-res$xnet_pt
gnet<-res$gnet
gnet_dyn<-res$gnet_dyn
gnet_dyn_pt<-res$gnet_dyn_pt
pr_clr<-totalPR(xnet,gs,tRange=seq(0,30,by=0.001))
pr_clr_mi<-totalPR(xnet_mi,gs,tRange=seq(0,30,by=0.001))
pr_clrpt<-totalPR(xnet_pt,gs,tRange=seq(0,30,by=0.001))
pr_clrpt_mi<-totalPR(xnet_mi_pt,gs,tRange=seq(0,30,by=0.001))
pr_epoch<-totalPR(enet,gs,tRange=seq(0,30,by=0.001))
pr_epochpt<-totalPR(enet_pt,gs,tRange=seq(0,30,by=0.001))
pr_epochpt_mi<-totalPR(enet_mi_pt,gs,tRange=seq(0,30,by=0.001))
pr_epoch_mi<-totalPR(enet_mi,gs,tRange=seq(0,30,by=0.001))
pr_genie<-totalPR(gnet,gs,tRange=seq(0,30,by=0.001))
pr_geniedyn<-totalPR(gnet_dyn,gs,tRange=seq(0,30,by=0.001))
pr_geniedynpt<-totalPR(gnet_dyn_pt,gs,tRange=seq(0,30,by=0.001))
pr_clr$method<-"CLR_pearson"
pr_clr_mi$method<-"CLR_MI"
pr_clrpt$method<-"CLR_pearson_PT"
pr_clrpt_mi$method<-"CLR_MI_PT"
pr_epoch$method<-"Epoch_pearson"
pr_epochpt$method<-"Epoch_pearson_PT"
pr_epochpt_mi$method<-"Epoch_MI_PT"
pr_epoch_mi$method<-"Epoch_MI"
pr_genie$method<-"GENIE3"
pr_geniedyn$method<-"GENIE3_dyngenes"
pr_geniedynpt$method<-"GENIE3_dyngenes_PT"
totalpr<-rbind(pr_clr,pr_clr_mi)
totalpr<-rbind(totalpr,pr_clrpt)
totalpr<-rbind(totalpr,pr_clrpt_mi)
totalpr<-rbind(totalpr,pr_epoch)
totalpr<-rbind(totalpr,pr_epoch_mi)
totalpr<-rbind(totalpr,pr_epochpt)
totalpr<-rbind(totalpr,pr_epochpt_mi)
totalpr<-rbind(totalpr,pr_genie)
totalpr<-rbind(totalpr,pr_geniedyn)
totalpr<-rbind(totalpr,pr_geniedynpt)
aupr<-data.frame(method=character(),aupr=numeric(),aupr05_norm=numeric(),aupr10_norm=numeric(),aupr20_norm=numeric())
for (method in unique(totalpr$method)){
subset<-totalpr[totalpr$method==method,c("Precision","Recall")]
subset<-subset[complete.cases(subset),]
auc<-DescTools::AUC(subset$Recall,subset$Precision, method="trapezoid", subdivisions=10000)
subset<-subset[subset$Recall<=0.2,]        #none of the parameters in DescTools::AUC are working... do this manually
auc20<-DescTools::AUC(subset$Recall,subset$Precision, method="trapezoid", subdivisions=10000)
subset<-subset[subset$Recall<=0.1,]
auc10<-DescTools::AUC(subset$Recall,subset$Precision, method="trapezoid", subdivisions=10000)
subset<-subset[subset$Recall<=0.05,]
auc05<-DescTools::AUC(subset$Recall,subset$Precision, method="trapezoid", subdivisions=10000)
aupr<-rbind(aupr,data.frame(method=method,aupr=auc,aupr05_norm=auc05/0.05,aupr10_norm=auc10/0.1,aupr20_norm=auc20/0.2))
}
aupr
}
load("~/Desktop/LabThings/Epoch/synthetic_data/trajectory02/trajectory02_100cells_expX_021020.rda")
load("~/Desktop/LabThings/Epoch/synthetic_data/trajectory02/trajectory02_100cells_sampTab_021020.rda")
expX<-expX[rowSums(expX)!=0,]
expX<-trans_prop(expX,1e4)
colnames(sampTab)[colnames(sampTab)=="cell_id"]<-"cell_name"
res<-reconstructGRN_all_methods(expX,sampTab,tfs,c("sA","sB","sC","sEndC"))
t02_100<-aupr_res(res,gs)
load("~/Desktop/LabThings/Epoch/synthetic_data/trajectory02/011420_trajectory02_tfs.rda")
load("~/Desktop/LabThings/Epoch/synthetic_data/trajectory02/011420_trajectory02_goldstandard_GRN.rda")
load("~/Desktop/LabThings/Epoch/synthetic_data/trajectory02/trajectory02_100cells_expX_021020.rda")
load("~/Desktop/LabThings/Epoch/synthetic_data/trajectory02/trajectory02_100cells_sampTab_021020.rda")
expX<-expX[rowSums(expX)!=0,]
expX<-trans_prop(expX,1e4)
colnames(sampTab)[colnames(sampTab)=="cell_id"]<-"cell_name"
res<-reconstructGRN_all_methods(expX,sampTab,tfs,c("sA","sB","sC","sEndC"))
t02_100<-aupr_res(res,gs)
smoothed<-t02_100
smoothed
library(reshape2)
library(ggplot2)
library(igraph)
library(qgraph)
library(loomR)
library(gam)
library(minet)
library(singleCellNet)
library(pheatmap)
library(RColorBrewer)
library(SCopeLoomR)
library(GENIE3)
library(loomR)
library(DescTools)
setwd("~/Desktop/LabThings/Epoch/Epoch/warpnet")
devtools::load_all()
res<-reconstructGRN_all_methods(expX,sampTab,tfs,c("sA","sB","sC","sEndC"))
t02_100<-aupr_res(res,gs)
t02_100
